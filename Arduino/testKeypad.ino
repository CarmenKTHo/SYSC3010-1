// arduinounit-2.2.0 - Version: Latest #include <ArduinoUnit.h>#line 2 "testKeypad"// Setting up the environment variables needed for this testboolean unlocked = false;int failCount = 0;String tempPassword = "";char keyPressed;// A stub that emulates receiving a signal from the server // indicating whether or not the PIN was correctboolean stubSerial(int value) {  if(value == 1) {    return true;  }  else {    return false;  }}// The function that receives a signal from the server indicating whether // or not the PIN was correct and sets the unlocked boolean accordinglyboolean keypadVerifyPin(String tempPassword, int value) {    /*  - send tempPassword  - receive 1 if correct PIN, 0 if incorrect  */    if (stubSerial(value) && failCount == 5) {     //lcdTimedOutMessage(); We're only testing the keypad so LCD is irrelevant in this test    delay(10000);    failCount = 0;     return false;  }    //Serial.println(tempPassword);    //delay(2000);    if(stubSerial(value) && (tempPassword.length() == 4)) {    unlocked = true;     failCount = 0;  }  else {    unlocked = false;    failCount++;      }  return unlocked;}// ================= Tests ===================test(getKeyNothing) {   int x;   failCount = 0;    if(keypadVerifyPin("", 1)) {    x = 1;// Arduino Unit requires integers for asserts  }         // so converting booleans to integers  else {    x = 0;  }  assertEqual(x, 0);  assertEqual(failCount, 1);}  test(getKeyIncorrectUnder5Tries) {  int x;    if(keypadVerifyPin("1234", 0)) {    x = 1;  }  else {    x = 0;  }  assertEqual(x, 0);  assertEqual(failCount, 1);}test(getKeyIncorrectAt5Tries) {  int x;  failCount = 5;    if(keypadVerifyPin("1234", 1)) {    x = 1;  }  else {    x = 0;  }  assertEqual(x, 0);  assertEqual(failCount, 0);}test(getKeyUnder4Pin) {   int x;   failCount = 0;    if(keypadVerifyPin("123", 1)) {    x = 1;  }  else {    x = 0;  }  assertEqual(x, 0);  assertEqual(failCount, 1);}  test(getKeyCorrect4Pin) {  int x;     if(keypadVerifyPin("1234", 1)) {    x = 1;   }  else {    x = 0;  }  assertEqual(x, 1);  assertEqual(failCount, 0);}void setup() {    Serial.begin(9600);}void loop() {    Test::run();}